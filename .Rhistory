q()
q()
q()
library("knitr", lib.loc="~/R/win-library/3.1")
install.packages("knitr")
---
#Processing the Data
Processing the Data
Processing the Data
Processing the Data
data <- read.csv("activity.csv", header=TRUE, sep=",", colClasses = c("numeric","character","numeric"))
data$date <- as.Date(data$date, "%Y-%m-%d")
median(stepsPerDay$steps, na.rm=TRUE)
variant: markdown_github
ppDmg <- apply(storm[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(storm[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=factor(format(as.Date(data$BGN_DATE, "%m/%d/%Y"), "%Y")),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(storm[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(storm[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidystorm <- storm.frame(
year=factor(format(as.Date(storm$BGN_DATE, "%m/%d/%Y"), "%Y")),
state=storm$STATE,
eventType=storm$EVTYPE,
fatalities=storm$FATALITIES,
injuries=storm$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidystorm)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidydata <- data.frame(
year=factor(format(as.Date(data$BGN_DATE, "%m/%d/%Y"), "%Y")),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidydata)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=factor(format(as.Date(data$BGN_DATE, "%m/%d/%Y"), "%Y")),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
# Remove all data with 0 values
tidydata <- tidydata[tidydata$fatalities != 0 | tidydata$injuries != 0 | tidydata$propertyDamage != 0 | tidydata$cropDamage != 0,]
str(tidydata)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=factor(format(as.Date(data$BGN_DATE, "%m/%d/%Y"), "%Y")),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=factor(format((data$BGN_DATE, "%m/%d/%Y"), "%Y")),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=factor(format(as.date(data$BGN_DATE, "%m/%d/%Y"), "%Y")),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=data$BGN_DATE,
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=data$BGN_DATE = as.Date(data$BGN_DATE, "%m/%d/%Y"),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=data$BGN_DATE = as.Date(data$BGN_DATE, "%m/%d/%Y"),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- dat.frame(
year=(format(as.Date(data$BGN_DATE, "%m/%d/%Y"), "%Y")),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=(format(data$BGN_DATE, "%m/%d/%Y"), )),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=(format(as.Date(data$BGN_DATE, "%m/%d/%Y"), "%Y")),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
data$BGN_DATE<-as.Date(data$BGN_DATE, "%m/%d/%Y %H:%M:%S")
tidyData <- data.frame(
year=data$BGN_DATE, ,
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
data$BGN_DATE<-as.Date(data$BGN_DATE, "%m/%d/%Y %H:%M:%S")
tidyData <- data.frame(
year=data$BGN_DATE,
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
data$BGN_DATE<-as.Date(data$BGN_DATE, "%m/%d/%Y %H:%M:%S")
tidyData <- data.frame(
year=data$Date,
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
data$BGN_DATE<-as.Date(data$BGN_DATE, "%m/%d/%Y %H:%M:%S")
tidyData <- data.frame(
year=data$BGN_DATE,
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
data$BGN_DATE<-as.Date(data$BGN_DATE, "%m/%d/%Y %H:%M:%S")
tidyData <- data.frame(
date=data$BGN_DATE,
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
date=data$BGN_DATE,
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
date=final_data$BGN_DATE,
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
install.packages("xtable")
library("xtable", lib.loc="~/R/win-library/3.1")
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
date=data$BGN_DATE,
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=ppDmg,
cropDamage=cpDmg)
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
new_cols<-c("BGN_DATE","STATE","EVTYPE","FATALITIES","INJURIES","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
tidyData<-data[,new_cols]
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
new_cols<-c("BGN_DATE","STATE","EVTYPE","FATALITIES","INJURIES","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
tidyData<-data[,new_cols]
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
new_cols<-c("BGN_DATE","STATE","EVTYPE","FATALITIES","INJURIES","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
tidyData<-data[,new_cols]
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
new_cols<-c("BGN_DATE","STATE","EVTYPE","FATALITIES","INJURIES","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
tidyFata<-data[,new_cols]
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
new_cols<-c("BGN_DATE","STATE","EVTYPE","FATALITIES","INJURIES","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
tidyFata<-data[,new_cols]
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
new_cols<-c("BGN_DATE","STATE","EVTYPE","FATALITIES","INJURIES","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
tidyData<-data[,new_cols]
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
clms<-c("BGN_DATE","STATE","EVTYPE","FATALITIES","INJURIES","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
tidyData<-data[,clms]
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
new_cols<-c("BGN_DATE","STATE","EVTYPE","FATALITIES","INJURIES","PROPDMG","PROPDMGEXP","CROPDMG","CROPDMGEXP")
final_data<-data[,new_cols]
str(final_data)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=factor(format(as.Date(data$BGN_DATE, "%m/%d/%Y"), "%Y")),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=propDmg,
cropDamage=cropDmg)
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=factor(format(as.Date(data$BGN_DATE, "%m/%d/%Y"), "%Y")),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=propDmg,
cropDamage=cropDmg)
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=data$BGN_DATE(format(as.Date(data$BGN_DATE, "%m/%d/%Y"), "%Y")),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=propDmg,
cropDamage=cropDmg)
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=data$BGN_DATE(format(as.Date(data$BGN_DATE,), "%Y")),
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=propDmg,
cropDamage=cropDmg)
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
year=data$BGN_DATE,
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=propDmg,
cropDamage=cropDmg)
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData <- data.frame(
state=data$STATE,
eventType=data$EVTYPE,
fatalities=data$FATALITIES,
injuries=data$INJURIES,
propertyDamage=propDmg,
cropDamage=cropDmg)
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
new_cols<-c("BGN_DATE","STATE","EVTYPE","FATALITIES","INJURIES","ppDmg","cpDmg")
str(tidyData)
libray(xtable)
ppDmg <- apply(data[, c('PROPDMG', 'PROPDMGEXP')], 1, function(y) multiplier(y['PROPDMG'], y['PROPDMGEXP']))
cpDmg <- apply(data[, c('CROPDMG', 'CROPDMGEXP')], 1, function(y) multiplier(y['CROPDMG'], y['CROPDMGEXP']))
tidyData<-c("BGN_DATE","STATE","EVTYPE","FATALITIES","INJURIES","ppDmg","cpDmg")
str(tidyData)
# Remove all data with 0 values
tidyData <- tidyData[tidyData$fatalities != 0 | tidydata$injuries != 0 | tidyData$ppDmg != 0 | tidyData$cpDmg != 0,]
str(tidyData)
#Results
# Casualties caused by fatalities and injuries, aggregating the two
aggCasEventType <- aggregate(tidyData$fatalities + tidyData$injuries, by=list(tidyData$eventType), FUN=sum)
colnames(aggCasEventType) <- c('eventType', 'Cas')
#Sorting by top 15
aggCasEventType <- aggCasEventType[order(-aggCasEventType[, 2]),]
aggCasEventType[1:15,]
## grep the predictors starting with 'IL'
source('~/answer.R')
install.packages("caret")
source('~/answer.R')
install.packages("AppliedPredictiveModeling")
source('~/answer.R')
View(predictors_IL)
View(predictors)
source('~/answer.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/an4.R')
install.packages("caret")
install.packages("AppliedPredictiveModeling")
source('~/an4.R')
View(predictors)
source('~/an4.R')
View(predictors)
install.packages("shiny")
install.packages("Rtools")
setwd("C:/Coursera/DevelopingDataProducts")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='akaushik3', token='F6CDFC9A960C65143F486F82F9D87C7D', secret='5N31+GlQV2+PVf8G/8UAOHUMSymF0X435nGr/ezo')
shiny::runApp()
shiny::runApp()
shiny::runApp()
file.edit('~/.Rprofile')
options(rpubs.upload.method = "internal")
